
    int solve(int i , int n , vector<int> &arr , int k , vector<int> &dp){
        
        if(i == n){
            return 0;
        }
        
        
        if(dp[i] != -1){
            return dp[i];
        }
        
        int maxans = INT_MIN;
        
        int len=0;
        
        int maxi = INT_MIN;
        
        for(int j=i; j<min(n,i+k);j++){
            
            len++;
            
            maxi = max(maxi , arr[j]);
            
            int sum = (len*maxi) + solve(j+1 , n , arr , k ,dp);
            
            maxans = max(maxans,sum);
        }
        
        return dp[i] = maxans;
        
        
    }
    
    
    int maxSumAfterPartitioning(vector<int>& arr, int k) {
        
        int n = arr.size();
        
        vector<int> dp(n,-1);
        
        
        return solve(0 , n , arr , k , dp);
        
        
    }