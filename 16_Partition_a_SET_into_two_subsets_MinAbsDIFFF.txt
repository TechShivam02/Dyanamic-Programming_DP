
int minSubsetSumDifference(vector<int>& arr, int n)
{
	
	int sum=0;

	for(auto i : arr){
		sum += i;
	}


	vector< vector<bool> > dp(n+1 , vector<bool>(sum+1,false));




	for(int index=0;index<n;index++){
			dp[index][0] = true;
	}

	dp[0][arr[0]] = true;




		for(int index=1;index<=n-1;index++){

			for(int target = 1 ; target <= sum ;target++){

				bool nottake = dp[index-1][target];

				bool take = false;

				if(arr[index] <= target){
					take = dp[index-1][target-arr[index]];
				}

				dp[index][target] = take || nottake;
			}
		}

		// return dp[n-1][k];



	int mini = 1e9;

	for(int s1=0; s1<= sum ; s1++){

		if(dp[n-1][s1] == true)  // s1  exists /possible
		{
			int s2 = sum-s1;

			mini = min(mini , abs(s1-s2));
		}

	}


	return mini;

	


}