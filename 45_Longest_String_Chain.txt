 
    bool checkpossible(string small , string large){
        
        if(small.size()+1 != large.size()){
            return false;      // Note  small.size()+1 == large.size()   not true // bcz compare char also
        }
        
        
        
        int fir=0;   // large    bdca
        int sec=0;   // small    bda
        
            
        
        while(fir < large.size()){
            
            if(sec<small.size() && large[fir] == small[sec]){
                fir++;
                sec++;
            }
            
            else{
                fir++;
            }
        }
        
        
        if(fir == large.size() && sec==small.size()){
            return true;
        }
        
        return false;
    }

    
    
    
    static bool comparator(string s1 , string s2){
        return s1.size() < s2.size();    
    }
    
    
    
    
    
    int longestStrChain(vector<string>& arr) {
        
        
        sort(arr.begin() , arr.end() , comparator);  // sort them acc to the lengthh
        
        
        
        int n=arr.size();
        
     
        
        
        
        vector<int> dp(n,1);
        
        int maxi=1;
        
        
        for(int i=0;i<n;i++){
            
            for(int j=0;j<i;j++){
                
                if( checkpossible(arr[j] , arr[i]) &&  1+dp[j] > dp[i] ){
                    
                    dp[i] = 1 + dp[j];
                }
            }
            
            if(dp[i] > maxi){
                maxi = dp[i];
            }
        }
           
        
        
        
        
        return maxi;
        
        
        
    }