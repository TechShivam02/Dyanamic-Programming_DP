#include <bits/stdc++.h> 

int mod = (int)(1e9+7);



int func(int index , int target , vector<int> &arr , vector<vector<int> > &dp){
        


    if(index ==0 ){
        if(target==0 && arr[0] == 0){return 2;}

        if(target==0 ||  target == arr[0] ){return 1;}

        return 0;
        
    }


        
        if(dp[index][target] != -1){
            return dp[index][target];
        }
        
        
        
        int notpick = func(index-1 , target , arr , dp);
        
        int pick = 0;
        
        if(arr[index] <= target){
            pick = func(index-1 , target-arr[index] , arr , dp);
        }
        
        return dp[index][target] = (notpick + pick) % mod;
        
        
        
    }




int countPartitions(int n, int d, vector<int> &arr) {
   
   int tsum=0;

   for(auto it : arr){
       tsum += it;
   }



if(tsum-d <0 || (tsum-d) % 2 ){
    return false;
}


   int sum =  (tsum - d)/2;


        
        
        vector<vector<int>> dp (n , vector<int>(sum+1,-1));
        
        return func(n-1 , sum  , arr , dp);



}


